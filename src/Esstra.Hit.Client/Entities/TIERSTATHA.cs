// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// Tierstatistik, erweitert um errechnete Werte, für Halter
    /// </summary>
    [Entity("TIERSTATHA")]
    public class TIERSTATHA
    {
        /// <summary>
        /// Gets or sets the value of "Kalbungsstatus".
        /// </summary>
        /// <remarks>
        /// ist eine Kalbung (über Geburtsmeldung) bekannt
        /// </remarks>
        [Column("KALBSTAT")]
        public int? KALBSTAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Erstkalbedatum".
        /// </summary>
        /// <remarks>
        /// Datum der ersten Kalbung des Muttertieres
        /// </remarks>
        [Column("EKALBDAT")]
        public DateOnly? EKALBDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Landkreis Geburt (hier nur 3stellig LKR ohne Land)".
        /// </summary>
        /// <remarks>
        /// Landkreis-Schlüssel
        /// </remarks>
        [Column("KREIS_GEB")]
        public int? KREIS_GEB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Landkreis Ende (hier nur 3stellig LKR ohne Land)".
        /// </summary>
        /// <remarks>
        /// Landkreis-Schlüssel
        /// </remarks>
        [Column("KREIS_END")]
        public int? KREIS_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke".
        /// </summary>
        /// <remarks>
        /// IDENTIFICATION NUMBER
        /// </remarks>
        [Column("LOM")]
        [Required]
        public decimal? LOM { get; set; }

        /// <summary>
        /// Gets or sets the value of "Data-Timestamp von".
        /// </summary>
        /// <remarks>
        /// SYS_VON des Datensatzes
        /// </remarks>
        [Column("DATA_VON")]
        [Required]
        public DateTime? DATA_VON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tier-Anfang".
        /// </summary>
        /// <remarks>
        /// Tier-Anfang durch Geburt, Impmark ...
        /// </remarks>
        [Column("TIER_ANF")]
        public int? TIER_ANF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anfangsdatum des Tieres".
        /// </summary>
        /// <remarks>
        /// Anfangsdatum im Tierstamm
        /// </remarks>
        [Column("DAT_ANF")]
        public DateOnly? DAT_ANF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Geburtsdatum".
        /// </summary>
        /// <remarks>
        /// Geburtsdatum Rind
        /// </remarks>
        [Column("GEB_DATR")]
        public DateOnly? GEB_DATR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rasse".
        /// </summary>
        /// <remarks>
        /// Rasse laut ADR-Schlüssel
        /// </remarks>
        [Column("RASSE")]
        public int? RASSE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Geschlecht".
        /// </summary>
        /// <remarks>
        /// Geschlecht Rind
        /// </remarks>
        [Column("GESCHL_R")]
        public int? GESCHL_R { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anfangs-Betrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer des Anfangsbetriebes, also Ersterfassung-, Geburt-, Markier- oder Einfuhrbetrieb
        /// </remarks>
        [Column("BNR15_AB")]
        public decimal? BNR15_AB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Geburtsbetrieb".
        /// </summary>
        /// <remarks>
        /// Geburtsbetrieb bei Ersterfassungssatz
        /// </remarks>
        [Column("BNR15_GEB")]
        public decimal? BNR15_GEB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ursprungsstaat".
        /// </summary>
        /// <remarks>
        /// Staat aus dem das Tier direkt kommt
        /// </remarks>
        [Column("LAND_URS")]
        public int? LAND_URS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Geburtsstaat".
        /// </summary>
        /// <remarks>
        /// Geburtsstaat
        /// </remarks>
        [Column("LAND_GEB")]
        public int? LAND_GEB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bundesland Geburt".
        /// </summary>
        /// <remarks>
        /// Bundesland-Schlüssel
        /// </remarks>
        [Column("BLAND_GEB")]
        public int? BLAND_GEB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tier-Ende".
        /// </summary>
        /// <remarks>
        /// Tier-Ende Tod (differenziert!), Schlachtung ...
        /// </remarks>
        [Column("TIER_END")]
        public int? TIER_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tierendedatum".
        /// </summary>
        /// <remarks>
        /// Datum der Schlachtung, Verendung oder Ausfuhr
        /// </remarks>
        [Column("DAT_END")]
        public DateOnly? DAT_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ende-Betrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer des Endebetriebes im Tierende
        /// </remarks>
        [Column("BNR15_EB")]
        public decimal? BNR15_EB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bundesland Ende".
        /// </summary>
        /// <remarks>
        /// Bundesland-Schlüssel
        /// </remarks>
        [Column("BLAND_END")]
        public int? BLAND_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Kategorie".
        /// </summary>
        /// <remarks>
        /// Kategorie des Schlachtkörpers
        /// </remarks>
        [Column("SCHL_KAT")]
        public int? SCHL_KAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Zielstaat".
        /// </summary>
        /// <remarks>
        /// Bestimmungsstaat bei Ausfuhr
        /// </remarks>
        [Column("LAND_ZIE")]
        public int? LAND_ZIE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Todesalter".
        /// </summary>
        /// <remarks>
        /// Alter bei Tod/Schlachtung in Monate.Tage
        /// </remarks>
        [Column("END_ALTER")]
        public decimal? END_ALTER { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnr Halter letztes Monat".
        /// </summary>
        /// <remarks>
        /// Betriebsnr der das Tier im letzten Monat überwiegend gehalten hat
        /// </remarks>
        [Column("BNR15_LMON")]
        public decimal? BNR15_LMON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Untersuchungslabor".
        /// </summary>
        /// <remarks>
        /// Betriebsnr des Untersuchungslabor oder -anstalt
        /// </remarks>
        [Column("UNTS_BNR15")]
        public decimal? UNTS_BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Untersuchungsdatum".
        /// </summary>
        /// <remarks>
        /// Datum der Untersuchung im Labor
        /// </remarks>
        [Column("UNTS_UDAT")]
        public DateOnly? UNTS_UDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "BSE-Untersuchungsergebnis".
        /// </summary>
        /// <remarks>
        /// Ergebnis der BSE-Untersuchung im Labor
        /// </remarks>
        [Column("UNTS_ERG")]
        public int? UNTS_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bundesland Halter letztes Monat".
        /// </summary>
        /// <remarks>
        /// Bundesland in dem das Tier im letzten Monat überwiegend gehalten wurde
        /// </remarks>
        [Column("BLAND_LMON")]
        public int? BLAND_LMON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Landkreis Halter letztes Monat (hier nur 3stellig LKR ohne Land)".
        /// </summary>
        /// <remarks>
        /// Landkreis in dem das Tier im letzten Monat überwiegend gehalten wurde
        /// </remarks>
        [Column("KREIS_LMON")]
        public int? KREIS_LMON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Lebenslauffehler".
        /// </summary>
        /// <remarks>
        /// Anzahl Fehler im Lebenslauf (inkl. Abgang letzte Meldung)
        /// </remarks>
        [Column("ANZ_LLF")]
        [Required]
        public int? ANZ_LLF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Status Lebenslauf".
        /// </summary>
        /// <remarks>
        /// Beurteilung des Lebenslauf anhand der letzten Meldung
        /// </remarks>
        [Column("STAT_LLF")]
        [Required]
        public int? STAT_LLF { get; set; }

        /// <summary>
        /// Gets or sets the value of "BHV1-Tierstatus, ohne Impfinformation".
        /// </summary>
        /// <remarks>
        /// BHV1-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("BHV1_ERG")]
        public int? BHV1_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "BVD-Tierstatus, ohne Impfinformation".
        /// </summary>
        /// <remarks>
        /// BVD-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("BVD_ERG")]
        public int? BVD_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "BHV1-Tierstatus, mit Impfinformation".
        /// </summary>
        /// <remarks>
        /// BHV1-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse, berücksichtigt Impfungen
        /// </remarks>
        [Column("BHV1_EMI")]
        public int? BHV1_EMI { get; set; }

        /// <summary>
        /// Gets or sets the value of "BVD-Tierstatus, mit Impfinformation".
        /// </summary>
        /// <remarks>
        /// BVD-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse, berücksichtigt Impfungen
        /// </remarks>
        [Column("BVD_EMI")]
        public int? BVD_EMI { get; set; }

        /// <summary>
        /// Gets or sets the value of "BHV1-Impfinformation".
        /// </summary>
        [Column("BHV1_IMP")]
        public int? BHV1_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "BVD-Impfinformation".
        /// </summary>
        [Column("BVD_IMP")]
        public int? BVD_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "MKS-Impfinformation liegt vor".
        /// </summary>
        /// <remarks>
        /// Aussage ob irgendeine MKS-Impfung für das Tier vorliegt
        /// </remarks>
        [Column("MKS_IMP")]
        public bool? MKS_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tierstatus - lebend, tot, sonstiges".
        /// </summary>
        /// <remarks>
        /// Aussage ob noch keine Ende-Meldung für Tierstatistik vorliegt
        /// </remarks>
        [Column("ST_LEBEND")]
        public int? ST_LEBEND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Alter in Tagen für Statistik".
        /// </summary>
        /// <remarks>
        /// wenn lebend Alter in Tagen = Heute - Geburtsdatum, also 0 bis n, wenn tot Endedatum - Geburtsdatum
        /// </remarks>
        [Column("ST_AL_TA")]
        public int? ST_AL_TA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Alter in Monaten für Statistik".
        /// </summary>
        /// <remarks>
        /// grobe Berechnung, 0-30 Tage=0 Monate, 31-60 Tage=1 Monat, 61-91 Tage=2 Monat
        /// </remarks>
        [Column("ST_AL_MO")]
        public int? ST_AL_MO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Altersklasse für Statistik".
        /// </summary>
        [Column("ST_AL_KL")]
        public int? ST_AL_KL { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-8-Impfinformation".
        /// </summary>
        [Column("BTV_IMP")]
        public int? BTV_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-8 Datum der letzten Impfung".
        /// </summary>
        [Column("BTV_IMDAT")]
        public DateOnly? BTV_IMDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-8 Datum der nächsten Änderung des Impfungstatus".
        /// </summary>
        [Column("BTV_IMDATX")]
        public DateOnly? BTV_IMDATX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Letztkalbedatum".
        /// </summary>
        /// <remarks>
        /// Datum der letzten, also jüngsten Kalbung des Muttertieres
        /// </remarks>
        [Column("LKALBDAT")]
        public DateOnly? LKALBDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Kälber".
        /// </summary>
        /// <remarks>
        /// Anzahl Kälber des Muttertieres
        /// </remarks>
        [Column("KALBANZ")]
        public int? KALBANZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "BHV1-Befunddatum (Tierstatusdatum)".
        /// </summary>
        /// <remarks>
        /// Datum an dem sich Tierstatus geändert hat, i.d.R. letzte neg. oder erste pos. Untersuchung
        /// </remarks>
        [Column("BHV1_BDAT")]
        public DateOnly? BHV1_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "BVD-Befunddatum".
        /// </summary>
        /// <remarks>
        /// Datum der letzten Änderung des Gesamtergebnisses
        /// </remarks>
        [Column("BVD_BDAT")]
        public DateOnly? BVD_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-Gesamtergebnis, mit Impfinformation".
        /// </summary>
        /// <remarks>
        /// BTV-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("BTV_EMI")]
        public int? BTV_EMI { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-Befunddatum".
        /// </summary>
        /// <remarks>
        /// Datum des letzten Untersuchungsergebnisses, also letzte Probenahme
        /// </remarks>
        [Column("BTV_BDAT")]
        public DateOnly? BTV_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Leukose-Gesamtergebnis".
        /// </summary>
        /// <remarks>
        /// Leukose-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("LEU_ERG")]
        public int? LEU_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Leukose-Befunddatum".
        /// </summary>
        /// <remarks>
        /// Datum des letzten Untersuchungsergebnisses, also letzte Probenahme
        /// </remarks>
        [Column("LEU_BDAT")]
        public DateOnly? LEU_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Brucellose-Gesamtergebnis".
        /// </summary>
        /// <remarks>
        /// Brucellose-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("BRU_ERG")]
        public int? BRU_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Brucellose-Befunddatum".
        /// </summary>
        /// <remarks>
        /// Datum des letzten Untersuchungsergebnisses, also letzte Probenahme
        /// </remarks>
        [Column("BRU_BDAT")]
        public DateOnly? BRU_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Beginndatum der Haltung".
        /// </summary>
        /// <remarks>
        /// aktuelle bzw. überwiegende Haltung des letzten Lebensmonats
        /// </remarks>
        [Column("DAT_LMON")]
        public DateOnly? DAT_LMON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Kalbung-Zugangsstatus".
        /// </summary>
        /// <remarks>
        /// Verhältnis von letzter Kalbung und Zugangsdatum
        /// </remarks>
        [Column("KALBZU_STA")]
        public int? KALBZU_STA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Letzten 5 Ziffern der Ohrmarke".
        /// </summary>
        [Column("LOM5")]
        public string? LOM5 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Todesalter (in Monaten und Bruchteile von Monaten)".
        /// </summary>
        /// <remarks>
        /// Differenz Ende- zu Geburtsdatum in Monaten mit Nachkommastellen (ein Tag sind 0.0322580645 Monate)
        /// </remarks>
        [Column("END_ALTERX")]
        public decimal? END_ALTERX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Aktuelles Alter (in Monaten und Bruchteile von Monaten)".
        /// </summary>
        /// <remarks>
        /// Differenz Heute zu Geburtsdatum in Monaten mit Nachkommastellen (ein Tag sind 0.0322580645 Monate)
        /// </remarks>
        [Column("AKT_ALTERX")]
        public decimal? AKT_ALTERX { get; set; }

        /// <summary>
        /// Gets or sets the value of "durchschnittliche Zwischenkalbezeit (in Monaten und Bruchteile von Monaten)".
        /// </summary>
        /// <remarks>
        /// Abstand letzter zu ersten Kalbung geteilt durch Anzahl, in Monaten (ein Tag sind 0.0322580645 Mon.)
        /// </remarks>
        [Column("ZKZ_DURCH")]
        public decimal? ZKZ_DURCH { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Kalbungen".
        /// </summary>
        /// <remarks>
        /// Anzahl Kalbungen des Muttertieres (Zwillinge sind eine Kalbung)
        /// </remarks>
        [Column("KALBUNGANZ")]
        public int? KALBUNGANZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "Landkreis Ende (hier 5stellig LKR mit Land)".
        /// </summary>
        /// <remarks>
        /// Landkreis-Schlüssel
        /// </remarks>
        [Column("LKR_END")]
        public int? LKR_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Landkreis Geburt (hier 5stellig LKR mit Land)".
        /// </summary>
        /// <remarks>
        /// Landkreis-Schlüssel
        /// </remarks>
        [Column("LKR_GEB")]
        public int? LKR_GEB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Landkreis Halter letztes Monat (hier 5stellig LKR mit Land)".
        /// </summary>
        /// <remarks>
        /// Landkreis in dem das Tier im letzten Monat überwiegend gehalten wurde
        /// </remarks>
        [Column("LKR_LMON")]
        public int? LKR_LMON { get; set; }

        /// <summary>
        /// Gets or sets the value of "durchschnittliche Zwischenkalbezeit (in Tagen)".
        /// </summary>
        /// <remarks>
        /// Abstand letzter zu ersten Kalbung geteilt durch Anzahl, in Tagen
        /// </remarks>
        [Column("ZKZ_DURCHT")]
        public Int64? ZKZ_DURCHT { get; set; }

        /// <summary>
        /// Gets or sets the value of "TBC-Befunddatum".
        /// </summary>
        /// <remarks>
        /// Datum des letzten Untersuchungsergebnisses, also letzte Probenahme
        /// </remarks>
        [Column("TBC_BDAT")]
        public DateOnly? TBC_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "TBC-Gesamtergebnis".
        /// </summary>
        /// <remarks>
        /// TBC-Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("TBC_ERG")]
        public int? TBC_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Differenz Todesdatum zu letzte Kalbung (in Monaten und Bruchteile von Monaten)".
        /// </summary>
        /// <remarks>
        /// Differenz in Monaten mit Nachkommastellen (ein Tag sind 0.0322580645 Monate)
        /// </remarks>
        [Column("LAK_ENDX")]
        public decimal? LAK_ENDX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Individuelle Nutzungsangabe".
        /// </summary>
        [Column("RD_INUTZ")]
        public int? RD_INUTZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "Stallnummer oder alternativ Tiername".
        /// </summary>
        [Column("RD_STALLNR")]
        public string? RD_STALLNR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Nummer für Betriebsteil, Herde oder Gruppe".
        /// </summary>
        [Column("RD_TEILNR")]
        public int? RD_TEILNR { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-4 Datum der letzten Impfung".
        /// </summary>
        [Column("BT4_IMDAT")]
        public DateOnly? BT4_IMDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-4 Datum der nächsten Änderung des Impfungstatus".
        /// </summary>
        [Column("BT4_IMDATX")]
        public DateOnly? BT4_IMDATX { get; set; }

        /// <summary>
        /// Gets or sets the value of "BTV-4-Impfinformation".
        /// </summary>
        [Column("BT4_IMP")]
        public int? BT4_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Q-Fieber Datum der letzten Impfung".
        /// </summary>
        [Column("QF_IMDAT")]
        public DateOnly? QF_IMDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Q-Fieber Datum der nächsten Änderung des Impfungstatus".
        /// </summary>
        [Column("QF_IMDATX")]
        public DateOnly? QF_IMDATX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Q-Fieber-Impfinformation".
        /// </summary>
        [Column("QF_IMP")]
        public int? QF_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Paratuberkulose-Befunddatum".
        /// </summary>
        [Column("PTB_BDAT")]
        public DateOnly? PTB_BDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Paratuberkulose-Gesamtergebnis".
        /// </summary>
        /// <remarks>
        /// Gesamtergebnis als Folge der einzelnen Untersuchungsergebnisse
        /// </remarks>
        [Column("PTB_ERG")]
        public int? PTB_ERG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Paratuberkulose letzte Untersuchung".
        /// </summary>
        [Column("PTB_LDAT")]
        public DateOnly? PTB_LDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rindergrippe Datum der letzten Impfung".
        /// </summary>
        [Column("RG_IMDAT")]
        public DateOnly? RG_IMDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rindergrippe Datum der nächsten Änderung des Impfungstatus".
        /// </summary>
        [Column("RG_IMDATX")]
        public DateOnly? RG_IMDATX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rindergrippe-Impfinformation".
        /// </summary>
        [Column("RG_IMP")]
        public int? RG_IMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Alter in Tagen bei BVD-Befund".
        /// </summary>
        /// <remarks>
        /// wenn kein BVDTEST Alter in Tagen = Heute - Geburtsdatum, also 0 bis n, sonst Befunddatum - Geburtsdatum
        /// </remarks>
        [Column("BVDB_AL_TA")]
        public int? BVDB_AL_TA { get; set; }

    }
}
