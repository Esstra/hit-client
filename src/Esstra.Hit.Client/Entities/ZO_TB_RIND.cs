// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// Zoonose-Untersuchung Tuberkulose Rind
    /// </summary>
    [Entity("ZO_TB_RIND")]
    public class ZO_TB_RIND
    {
        /// <summary>
        /// Gets or sets the value of "PID-Betrieb, Proben-Identifikation Ausgabebetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Proben-ID-Bereich verwaltet (ursprünglich BSE, dann universell)
        /// </remarks>
        [Column("BSEPID_BNR")]
        [Required]
        public decimal? BSEPID_BNR { get; set; }

        /// <summary>
        /// Gets or sets the value of "PID-Probe, Proben-Identifikation Sub-Part".
        /// </summary>
        /// <remarks>
        /// spezifische eindeutige ID innerhalb des Systems einer Ausgabestelle (urspr. BSE, dann universell)
        /// </remarks>
        [Column("BSEPID_SUB")]
        [Required]
        public string? BSEPID_SUB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Untersuchungslabor".
        /// </summary>
        /// <remarks>
        /// Betriebsnr des Untersuchungslabor oder -anstalt
        /// </remarks>
        [Column("UNTS_BNR15")]
        [Required]
        public decimal? UNTS_BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke".
        /// </summary>
        /// <remarks>
        /// IDENTIFICATION NUMBER
        /// </remarks>
        [Column("LOM")]
        [Required]
        public decimal? LOM { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnummer".
        /// </summary>
        /// <remarks>
        /// Registriernummer für Betrieb, Langform mit B.Land und Staat
        /// </remarks>
        [Column("BNR15")]
        [Required]
        public decimal? BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verantwortlicher Tierarzt".
        /// </summary>
        /// <remarks>
        /// zuständiger Hof- oder Privat-Tierarzt, ggf. Veterinär
        /// </remarks>
        [Column("BNR15_TA")]
        [Required]
        public decimal? BNR15_TA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Probennahmedatum".
        /// </summary>
        /// <remarks>
        /// Datum der Entnahme der Probe beim Tier
        /// </remarks>
        [Column("UNTS_NDAT")]
        [Required]
        public DateOnly? UNTS_NDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Probeneingang - Datum".
        /// </summary>
        /// <remarks>
        /// Datum des Zeitpunkts der Einzelprobenerfassung
        /// </remarks>
        [Column("UNTS_EDAT")]
        [Required]
        public DateOnly? UNTS_EDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Untersuchungsdatum".
        /// </summary>
        /// <remarks>
        /// Datum der Untersuchung im Labor
        /// </remarks>
        [Column("UNTS_UDAT")]
        [Required]
        public DateOnly? UNTS_UDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Probenmaterial, in TB-Untersuchung".
        /// </summary>
        /// <remarks>
        /// Probenmaterial bei Zoonose-Untersuchungen
        /// </remarks>
        [Column("ZO_TB_PMAT")]
        [Required]
        public int? ZO_TB_PMAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Untersuchungsmethode TB".
        /// </summary>
        /// <remarks>
        /// Untersuchungsmethode bei Zoonose-Untersuchungen
        /// </remarks>
        [Column("ZO_TB_METH")]
        [Required]
        public int? ZO_TB_METH { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mycobacterium. bovis".
        /// </summary>
        /// <remarks>
        /// Speziesnachweis Mycobacterium.bovis
        /// </remarks>
        [Column("ZO_TB_MBO")]
        [Required]
        public bool? ZO_TB_MBO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mycobacterium. caprae".
        /// </summary>
        /// <remarks>
        /// Speziesnachweis Mycobacterium.caprae
        /// </remarks>
        [Column("ZO_TB_MCA")]
        [Required]
        public bool? ZO_TB_MCA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mycobacterium. tuberculosis".
        /// </summary>
        /// <remarks>
        /// Speziesnachweis Mycobacterium.tuberculosis
        /// </remarks>
        [Column("ZO_TB_MTU")]
        [Required]
        public bool? ZO_TB_MTU { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mycobacterium. africanum".
        /// </summary>
        /// <remarks>
        /// Speziesnachweis Mycobacterium.africanum
        /// </remarks>
        [Column("ZO_TB_MAF")]
        [Required]
        public bool? ZO_TB_MAF { get; set; }

        /// <summary>
        /// Gets or sets the value of "TB-Untersuchungsergebnis / Einzelbefund".
        /// </summary>
        /// <remarks>
        /// TB-Untersuchungsergebnnis / Einzelbefund bei Zoonose-Untersuchung
        /// </remarks>
        [Column("UNTS_ETB")]
        [Required]
        public int? UNTS_ETB { get; set; }

        /// <summary>
        /// Gets the value of "Meldebetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_BNR")]
        public decimal? MELD_BNR { get; set; }

        /// <summary>
        /// Gets the value of "Meldemitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_MBN")]
        public int? MELD_MBN { get; set; }

        /// <summary>
        /// Gets the value of "Stornobetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_BNR")]
        public decimal? STRN_BNR { get; set; }

        /// <summary>
        /// Gets the value of "Stornomitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_MBN")]
        public int? STRN_MBN { get; set; }

        /// <summary>
        /// Gets the value of "gespeichert".
        /// </summary>
        /// <remarks>
        /// Speichern-Zeitpunkt, ab wann die Information technisch gültig ist
        /// </remarks>
        [Column("SYS_VON")]
        public DateTime? SYS_VON { get; set; }

        /// <summary>
        /// Gets the value of "storniert".
        /// </summary>
        /// <remarks>
        /// Storno-Zeitpunkt, ab wann die Information technisch nicht meht gültig ist
        /// </remarks>
        [Column("SYS_BIS")]
        public DateTime? SYS_BIS { get; set; }

        /// <summary>
        /// Gets the value of "Satzstatus".
        /// </summary>
        /// <remarks>
        /// Systemstatus des Satzes
        /// </remarks>
        [Column("SYS_STAT")]
        public int? SYS_STAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mycobacterium. tuberculosis-Komplex".
        /// </summary>
        /// <remarks>
        /// Speziesnachweis Mycobacterium.tuberculosis-Komplex
        /// </remarks>
        [Column("ZO_TB_COMP")]
        [Required]
        public bool? ZO_TB_COMP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Untersuchungsgrund, im Untersuchungsauftrag".
        /// </summary>
        [Column("UNTS_GRUND")]
        [Required]
        public int? UNTS_GRUND { get; set; }

    }
}
