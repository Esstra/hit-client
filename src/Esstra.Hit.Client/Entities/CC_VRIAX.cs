// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// CC-Kontrolle Bereich 2 Gesundheit - Rinder, mit Anlage 1 Einzeltier (Ergebnissicht)
    /// </summary>
    [Entity("CC_VRIAX")]
    public class CC_VRIAX
    {
        /// <summary>
        /// Gets or sets the value of "Betriebsnummer".
        /// </summary>
        /// <remarks>
        /// Registriernummer für Betrieb, Langform mit B.Land und Staat
        /// </remarks>
        [Column("BNR15")]
        [Required]
        public decimal? BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnummer des Unternehmens für Cross-Compliance".
        /// </summary>
        /// <remarks>
        /// Antragsteller-Registriernummer
        /// </remarks>
        [Column("BNR15_UNCC")]
        [Required]
        public decimal? BNR15_UNCC { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prüfbehörde für Cross-Compliance".
        /// </summary>
        /// <remarks>
        /// Registriernummer der zuständigen Prüfbehörde
        /// </remarks>
        [Column("BNR15_PBCC")]
        [Required]
        public decimal? BNR15_PBCC { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bemerkung".
        /// </summary>
        [Column("BEMERKUNG")]
        public string? BEMERKUNG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Auswahlgrund".
        /// </summary>
        /// <remarks>
        /// Grund für Auswahl zur Vor-Ort-Kontrolle
        /// </remarks>
        [Column("AUSW_GRND")]
        public int? AUSW_GRND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Fachbehörde für Cross-Check".
        /// </summary>
        /// <remarks>
        /// Registriernummer der zuständigen Fachbehörde
        /// </remarks>
        [Column("BNR15_BCRO")]
        public decimal? BNR15_BCRO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 1 Umwelt - Vogelschutz".
        /// </summary>
        [Column("CROS_UVO")]
        [Required]
        public bool? CROS_UVO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 1 Umwelt - FFH".
        /// </summary>
        [Column("CROS_UFF")]
        [Required]
        public bool? CROS_UFF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 1 Umwelt - Nitrat".
        /// </summary>
        [Column("CROS_UNI")]
        [Required]
        public bool? CROS_UNI { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 1 Umwelt - Grundwasser".
        /// </summary>
        [Column("CROS_UGR")]
        [Required]
        public bool? CROS_UGR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 1 Umwelt - Klärschlamm".
        /// </summary>
        [Column("CROS_UKS")]
        [Required]
        public bool? CROS_UKS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - Schweine".
        /// </summary>
        [Column("CROS_VSW")]
        [Required]
        public bool? CROS_VSW { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - Pflanzenschutzmittel".
        /// </summary>
        [Column("CROS_VPS")]
        [Required]
        public bool? CROS_VPS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - Hormonrichtlinie / Mitteilung".
        /// </summary>
        [Column("CROS_VHO")]
        [Required]
        public bool? CROS_VHO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - Futtermittel".
        /// </summary>
        [Column("CROS_VFM")]
        [Required]
        public bool? CROS_VFM { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - Lebensmittel pflanzlicher/tierischer Herkunft".
        /// </summary>
        [Column("CROS_VLP")]
        [Required]
        public bool? CROS_VLP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - TSE".
        /// </summary>
        [Column("CROS_VLT")]
        [Required]
        public bool? CROS_VLT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 3 Tierschutz - Haltung Kälber".
        /// </summary>
        [Column("CROS_TKA")]
        [Required]
        public bool? CROS_TKA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 3 Tierschutz - Haltung Schweine".
        /// </summary>
        [Column("CROS_TSW")]
        [Required]
        public bool? CROS_TSW { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 3 Tierschutz - landwirtschaftliche Nutztiere".
        /// </summary>
        [Column("CROS_TLN")]
        [Required]
        public bool? CROS_TLN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Datum der Information der zuständigen Fachbehörde".
        /// </summary>
        /// <remarks>
        /// Mitteilung über Hinweise auf Verstoß gegen anderw. Verpflichtungen, außerhalb eigener Zuständigkeit
        /// </remarks>
        [Column("CROS_INDAT")]
        public DateOnly? CROS_INDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Cross-Check Bemerkung im Teil B".
        /// </summary>
        /// <remarks>
        /// Ausführungen zu den Feststellungen / Hinweisen, zu festgestellten Verstößen oder Hinweise
        /// </remarks>
        [Column("CROS_BEM_B")]
        public string? CROS_BEM_B { get; set; }

        /// <summary>
        /// Gets or sets the value of "Cross-Check Bemerkung im Teil H".
        /// </summary>
        /// <remarks>
        /// Ausführungen zu den Feststellungen / Hinweisen, als Mitteilung für andere Behörde
        /// </remarks>
        [Column("CROS_BEM_H")]
        public string? CROS_BEM_H { get; set; }

        /// <summary>
        /// Gets or sets the value of "Welche Teile fehlen noch, bzw. wie weit fertig".
        /// </summary>
        /// <remarks>
        /// Angaben welche Teile der Eingabe noch fehlen, bzw. wie weit fertig
        /// </remarks>
        [Column("CC_MISSING")]
        [Required]
        public int? CC_MISSING { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß in einem anderen Bereich".
        /// </summary>
        [Column("CROS_JN")]
        [Required]
        public bool? CROS_JN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke".
        /// </summary>
        /// <remarks>
        /// IDENTIFICATION NUMBER
        /// </remarks>
        [Column("LOM")]
        [Required]
        public decimal? LOM { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 7".
        /// </summary>
        /// <remarks>
        /// Prüfung Kennzeichnung (Feststellung am Tier)
        /// </remarks>
        [Column("VOK_A1S7")]
        public int? VOK_A1S7 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 8".
        /// </summary>
        /// <remarks>
        /// Prüfung Angaben zum Alter (Feststellung am Tier)
        /// </remarks>
        [Column("VOK_A1S8")]
        public int? VOK_A1S8 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 9".
        /// </summary>
        /// <remarks>
        /// Prüfung Geschecht (Feststellung am Tier)
        /// </remarks>
        [Column("VOK_A1S9")]
        public int? VOK_A1S9 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 10".
        /// </summary>
        /// <remarks>
        /// Prüfung Rasse (Feststellung am Tier)
        /// </remarks>
        [Column("VOK_A1S10")]
        public int? VOK_A1S10 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 11".
        /// </summary>
        /// <remarks>
        /// Prüfung Kennzeichnung (Akten im Betrieb)
        /// </remarks>
        [Column("VOK_A1S11")]
        public int? VOK_A1S11 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 12".
        /// </summary>
        /// <remarks>
        /// Prüfung Bestandsregister (Akten im Betrieb)
        /// </remarks>
        [Column("VOK_A1S12")]
        public int? VOK_A1S12 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 13".
        /// </summary>
        /// <remarks>
        /// Prüfung Begleitpapier oder Pass (Akten im Betrieb)
        /// </remarks>
        [Column("VOK_A1S13")]
        public int? VOK_A1S13 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte 14".
        /// </summary>
        /// <remarks>
        /// Prüfung Datenbankabgleich (Datenbank)
        /// </remarks>
        [Column("VOK_A1S14")]
        public int? VOK_A1S14 { get; set; }

        /// <summary>
        /// Gets the value of "Meldedatum (View Teil A)".
        /// </summary>
        /// <remarks>
        /// Datum des Meldeeingang
        /// </remarks>
        [Column("MELD_DAT_A")]
        public DateOnly? MELD_DAT_A { get; set; }

        /// <summary>
        /// Gets the value of "Meldeweg (View Teil A)".
        /// </summary>
        /// <remarks>
        /// Meldeweg (Post,IVR,IN...)
        /// </remarks>
        [Column("MELD_WG_A")]
        public int? MELD_WG_A { get; set; }

        /// <summary>
        /// Gets the value of "Meldebetrieb (View Teil A)".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_BNR_A")]
        public decimal? MELD_BNR_A { get; set; }

        /// <summary>
        /// Gets the value of "Meldemitbenutzer (View Teil A)".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_MBN_A")]
        public int? MELD_MBN_A { get; set; }

        /// <summary>
        /// Gets the value of "gespeichert (Teil A)".
        /// </summary>
        /// <remarks>
        /// Speichern-Zeitpunkt, ab wann die Information im Teil A technisch gültig ist
        /// </remarks>
        [Column("SYS_VON_A")]
        public DateTime? SYS_VON_A { get; set; }

        /// <summary>
        /// Gets the value of "storniert (Teil A)".
        /// </summary>
        /// <remarks>
        /// Storno-Zeitpunkt, ab wann die Information im Teil A technisch nicht meht gültig ist
        /// </remarks>
        [Column("SYS_BIS_A")]
        public DateTime? SYS_BIS_A { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 2 Gesundheit - Schafe und Ziegen".
        /// </summary>
        [Column("CROS_VSZ")]
        [Required]
        public bool? CROS_VSZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "Hinweis auf Verstoß Bereich 4 weiteres - Anhang IV".
        /// </summary>
        [Column("CROS_WA4")]
        [Required]
        public bool? CROS_WA4 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prozentsatz Sanktionierung wenn Vorsatz vorliegt (ganzzahlig)".
        /// </summary>
        [Column("VORS_GES")]
        public int? VORS_GES { get; set; }

        /// <summary>
        /// Gets or sets the value of "Datum des fachlichen Abschlusses der Prüfung".
        /// </summary>
        [Column("VOK_ENDDAT")]
        public DateOnly? VOK_ENDDAT { get; set; }

        /// <summary>
        /// Gets the value of "Meldedatum".
        /// </summary>
        /// <remarks>
        /// Datum des Meldeeingang
        /// </remarks>
        [Column("MELD_DAT")]
        public DateOnly? MELD_DAT { get; set; }

        /// <summary>
        /// Gets the value of "Meldeweg".
        /// </summary>
        /// <remarks>
        /// Meldeweg (Post,IVR,IN...)
        /// </remarks>
        [Column("MELD_WG")]
        public int? MELD_WG { get; set; }

        /// <summary>
        /// Gets the value of "Meldebetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_BNR")]
        public decimal? MELD_BNR { get; set; }

        /// <summary>
        /// Gets the value of "Meldemitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_MBN")]
        public int? MELD_MBN { get; set; }

        /// <summary>
        /// Gets the value of "gespeichert".
        /// </summary>
        /// <remarks>
        /// Speichern-Zeitpunkt, ab wann die Information technisch gültig ist
        /// </remarks>
        [Column("SYS_VON")]
        public DateTime? SYS_VON { get; set; }

        /// <summary>
        /// Gets the value of "storniert".
        /// </summary>
        /// <remarks>
        /// Storno-Zeitpunkt, ab wann die Information technisch nicht meht gültig ist
        /// </remarks>
        [Column("SYS_BIS")]
        public DateTime? SYS_BIS { get; set; }

        /// <summary>
        /// Gets the value of "Systembewertung Fahrlässigkeit der geprüften Rechtsakte".
        /// </summary>
        [Column("VERST_SYS")]
        public int? VERST_SYS { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Datum".
        /// </summary>
        /// <remarks>
        /// Datum der Vor-Ort-Kontrolle
        /// </remarks>
        [Column("VOK_DAT")]
        [Required]
        public DateOnly? VOK_DAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Jahr der Risikoanalyse (Kontrolljahr)".
        /// </summary>
        /// <remarks>
        /// Jahresangabe, vierstellig
        /// </remarks>
        [Column("RIS_JAHR")]
        [Required]
        public int? RIS_JAHR { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Ankündigung".
        /// </summary>
        /// <remarks>
        /// Art der Ankündigung bei Vor-Ort-Kontrolle
        /// </remarks>
        [Column("VOK_ANKD")]
        public int? VOK_ANKD { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK gestattet".
        /// </summary>
        /// <remarks>
        /// Wurde Vor-Ort-Kontrolle gestattet
        /// </remarks>
        [Column("VOK_GEST")]
        [Required]
        public int? VOK_GEST { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK durchgeführt oder nicht".
        /// </summary>
        /// <remarks>
        /// VOK durchgeführt oder Grund wenn nicht
        /// </remarks>
        [Column("VOK_DURCH")]
        public int? VOK_DURCH { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Prüfer".
        /// </summary>
        /// <remarks>
        /// Prüfende Person (Mitbenutzeridentifikation)
        /// </remarks>
        [Column("VOK_PERS")]
        public string? VOK_PERS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Vorgefunden".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder insgesamt / vorgefunden
        /// </remarks>
        [Column("VOK_GEFU")]
        public int? VOK_GEFU { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohne LOM, eigene Nachzucht".
        /// </summary>
        /// <remarks>
        /// Tiere ohne Ohrmarke kleiner 7 Tage alt, eigene Nachzucht ohne Kennzeichnung
        /// </remarks>
        [Column("VOK_LT7")]
        public int? VOK_LT7 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Maßgeblicher Bestand".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder vorgefunden abzüglich eigene Nachzucht ohne OM
        /// </remarks>
        [Column("VOK_MBE")]
        public int? VOK_MBE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohne oder mit unzulässiger Ohrmarke".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere ohne oder mit unzulässiger Ohrmarke
        /// </remarks>
        [Column("VOK_NOKLOM")]
        public int? VOK_NOKLOM { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mit nur einer Ohrmarke".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere mit einer Ohrmarke
        /// </remarks>
        [Column("VOK_LOM1")]
        public int? VOK_LOM1 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarkenproblem, CC konform".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere mit einer, ohne oder unzulässigen Ohrmarke, davon nicht sanktionsrelevant
        /// </remarks>
        [Column("VOK_LOM1K")]
        public int? VOK_LOM1K { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere ohne oder mit unzulässiger Kennzeichnung".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_ANZ_KV")]
        public int? VRI_ANZ_KV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prozentsatz Kennzeichnungsverstoß (gerundet, zwei NK)".
        /// </summary>
        [Column("VRI_PRZ_KV")]
        public decimal? VRI_PRZ_KV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Register vorhanden".
        /// </summary>
        [Column("VOK_REGVH")]
        public int? VOK_REGVH { get; set; }

        /// <summary>
        /// Gets or sets the value of "Register aktuell und vollständig".
        /// </summary>
        /// <remarks>
        /// Bestandsregister ist aktuell und vollständig geführt
        /// </remarks>
        [Column("VOK_REGA")]
        public int? VOK_REGA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Im Bestandsregister".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere im vorliegenden Register
        /// </remarks>
        [Column("VOK_REG")]
        public int? VOK_REG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Nicht im Bestandsregister".
        /// </summary>
        /// <remarks>
        /// Anzahl nicht im Bestandsregister geführte Rinder
        /// </remarks>
        [Column("VOK_NOREG")]
        public int? VOK_NOREG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Nicht vorhandene Rinder".
        /// </summary>
        /// <remarks>
        /// Anzahl geführte aber nicht vorhandene Rinder
        /// </remarks>
        [Column("VOK_NOVORH")]
        public int? VOK_NOVORH { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere mit fehlerhaftem Eintrag im Register, vom Halter verschuldet, bei VOK korrigierbar".
        /// </summary>
        /// <remarks>
        /// damit erst mal nicht sanktionsrelevant, im Wiederholungsfall Code 9 verwenden, siehe VOK_REG_FS
        /// </remarks>
        [Column("VOK_REG_FE")]
        public int? VOK_REG_FE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere ohne oder mit unzulässigem Eintrag in Bestandsregister".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_ANZ_BV")]
        public int? VRI_ANZ_BV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prozentsatz Bestandsregisterverstoß (gerundet, zwei NK)".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_PRZ_BV")]
        public decimal? VRI_PRZ_BV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Im Betrieb vorhandene Pässe/Begleitpapiere".
        /// </summary>
        /// <remarks>
        /// Anzahl im Betrieb vorhandene Pässe/Begleitpapiere
        /// </remarks>
        [Column("VOK_PAP")]
        public int? VOK_PAP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Pässe/Begleitp. nicht vollständig u. fehlerfrei geführt".
        /// </summary>
        /// <remarks>
        /// Gibt es Hinweise, dass Pässe/Begleitpapiere nicht vollständig und fehlerfrei geführt sind.
        /// </remarks>
        [Column("VOK_PAPHW")]
        public int? VOK_PAPHW { get; set; }

        /// <summary>
        /// Gets or sets the value of "bestellte Rinderpässe".
        /// </summary>
        /// <remarks>
        /// bestellte Rinderpässe
        /// </remarks>
        [Column("VOK_PAPBST")]
        public int? VOK_PAPBST { get; set; }

        /// <summary>
        /// Gets or sets the value of "nicht zurück gesandte Pässe/Begleitpapiere".
        /// </summary>
        /// <remarks>
        /// Pass/Begleitpapiere, die nicht mehr vorhandenen Rindern zuzuordnen sind
        /// </remarks>
        [Column("VOK_PAPNOR")]
        public int? VOK_PAPNOR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tiere ohne Papiere".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere ohne Papiere
        /// </remarks>
        [Column("VOK_NOPAP")]
        public int? VOK_NOPAP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere mit fehlerhaftem Eintrag im Tierpass, vom Halter verschuldet".
        /// </summary>
        [Column("VOK_PAP_FE")]
        public int? VOK_PAP_FE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere ohne oder mit unzulässigem Tierpass".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_ANZ_PV")]
        public int? VRI_ANZ_PV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prozentsatz Tierpassverstoß (gerundet, zwei NK)".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_PRZ_PV")]
        public decimal? VRI_PRZ_PV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Im HIT".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere laut HIT
        /// </remarks>
        [Column("VOK_HIT")]
        public int? VOK_HIT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rinder nicht in HIT, Meldefrist noch nicht abgelaufen".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder, die aufgrund nicht abgelaufener Meldefrist nicht in HIT geführt sind
        /// </remarks>
        [Column("VOK_NOH_NF")]
        public int? VOK_NOH_NF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rinder nicht in HIT, Meldefrist überschritten".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder, die nicht in HIT geführt sind, Meldefrist überschritten
        /// </remarks>
        [Column("VOK_NOH_FU")]
        public int? VOK_NOH_FU { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rinder nicht in HIT aufgrund Fehler Dritter".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder, die aufgrund Fehler Dritter nicht in HIT geführt sind
        /// </remarks>
        [Column("VOK_NOH_FD")]
        public int? VOK_NOH_FD { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rinder in HIT, n. im Bestand, innerhalb Meldefrist".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder in HIT, die nicht im Bestand vorhanden sind, Meldefrist noch nicht überschritten
        /// </remarks>
        [Column("VOK_HIT_NF")]
        public int? VOK_HIT_NF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Rinder in HIT, n. im Bestand, Meldefrist überschritten".
        /// </summary>
        /// <remarks>
        /// Anzahl Rinder in HIT, die nicht im Bestand vorhanden sind, Meldefrist überschritten
        /// </remarks>
        [Column("VOK_HIT_FU")]
        public int? VOK_HIT_FU { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere mit fehlerhaftem Eintrag in HIT, vom Halter verschuldet".
        /// </summary>
        [Column("VOK_HIT_FE")]
        public int? VOK_HIT_FE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere ohne oder mit unzulässigem Eintrag in HIT".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_ANZ_HV")]
        public int? VRI_ANZ_HV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prozentsatz HIT-Meldeverstoß (gerundet, zwei NK)".
        /// </summary>
        /// <remarks>
        /// errechneter Wert
        /// </remarks>
        [Column("VRI_PRZ_HV")]
        public decimal? VRI_PRZ_HV { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere mit Beanstandungen in der Kontrolle".
        /// </summary>
        [Column("VOK_T_BEAN")]
        public int? VOK_T_BEAN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verstoß gegen den Standard / Rechtsakt - ja/nein".
        /// </summary>
        [Column("VERSTOSS")]
        public bool? VERSTOSS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prüfer-Bewertung bei Verstoß gegen 1.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Kennzeichnung(Ohrm.)
        /// </remarks>
        [Column("VRI_S1_PR")]
        public int? VRI_S1_PR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Regelverstoß gegen 1.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Kennzeichnung(Ohrm.)
        /// </remarks>
        [Column("VRI_S1_RE")]
        public int? VRI_S1_RE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Vorsatz beim Verstoß gegen 1.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Kennzeichnung(Ohrm.)
        /// </remarks>
        [Column("VRI_S1_VO")]
        public bool? VRI_S1_VO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Gesamtbewertung Fahrlässigkeit der geprüften Rechtsakte".
        /// </summary>
        [Column("VERST_GES")]
        public int? VERST_GES { get; set; }

        /// <summary>
        /// Gets or sets the value of "Vorsatz beim Verstoß gegen 2.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Bestandsregister
        /// </remarks>
        [Column("VRI_S2_VO")]
        public bool? VRI_S2_VO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prüfer-Bewertung bei Verstoß gegen 2.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Bestandsregister
        /// </remarks>
        [Column("VRI_S2_PR")]
        public int? VRI_S2_PR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Regelverstoß gegen 2.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Bestandsregister
        /// </remarks>
        [Column("VRI_S2_RE")]
        public int? VRI_S2_RE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prüfer-Bewertung bei Verstoß gegen 3.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Rinderpässe
        /// </remarks>
        [Column("VRI_S3_PR")]
        public int? VRI_S3_PR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Vorsatz beim Verstoß gegen 4.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Datenbank HIT
        /// </remarks>
        [Column("VRI_S4_VO")]
        public bool? VRI_S4_VO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Regelverstoß gegen 3.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Rinderpässe
        /// </remarks>
        [Column("VRI_S3_RE")]
        public int? VRI_S3_RE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Regelverstoß gegen 4.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Datenbank HIT
        /// </remarks>
        [Column("VRI_S4_RE")]
        public int? VRI_S4_RE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prüfer-Bewertung bei Verstoß gegen 4.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Datenbank HIT
        /// </remarks>
        [Column("VRI_S4_PR")]
        public int? VRI_S4_PR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Vorsatz beim Verstoß gegen 3.systemat. Kriterium im Bereich 2 Gesundheit - Rinder".
        /// </summary>
        /// <remarks>
        /// Rinderpässe
        /// </remarks>
        [Column("VRI_S3_VO")]
        public bool? VRI_S3_VO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl Tiere mit fehlerhaftem Eintrag im Reg, bei VOK nicht korrigierbar oder wiederholt".
        /// </summary>
        [Column("VOK_REG_FS")]
        public int? VOK_REG_FS { get; set; }

        /// <summary>
        /// Gets the value of "Stornomitbenutzer (View Teil A)".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_MBN_A")]
        public int? STRN_MBN_A { get; set; }

        /// <summary>
        /// Gets the value of "Stornobetrieb (View Teil A)".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_BNR_A")]
        public decimal? STRN_BNR_A { get; set; }

        /// <summary>
        /// Gets the value of "Stornomitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_MBN")]
        public int? STRN_MBN { get; set; }

        /// <summary>
        /// Gets the value of "Stornobetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_BNR")]
        public decimal? STRN_BNR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Follow up Status".
        /// </summary>
        /// <remarks>
        /// Angabe ob Follow up erforderlich und ggf. durchgeführt
        /// </remarks>
        [Column("CC_FOL_UP")]
        [Required]
        public int? CC_FOL_UP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Datum der Durchführung des Follow up".
        /// </summary>
        [Column("CC_FOL_DAT")]
        public DateOnly? CC_FOL_DAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "CC Bemerkung im Teil F".
        /// </summary>
        /// <remarks>
        /// Ausführungen zu Bewertung, Bagatelle und Follow-Up
        /// </remarks>
        [Column("CC_BEM_F")]
        public string? CC_BEM_F { get; set; }

        /// <summary>
        /// Gets or sets the value of "Änderungsgrund".
        /// </summary>
        /// <remarks>
        /// Grund der Erfassung, Änderung oder Korrektur, insbesondere bei Kontrollberichten
        /// </remarks>
        [Column("MELD_GRND")]
        [Required]
        public int? MELD_GRND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Änderungsgrund für Storno".
        /// </summary>
        /// <remarks>
        /// Grund des Storno, insbesondere bei Kontrollberichten
        /// </remarks>
        [Column("STRN_GRND")]
        public int? STRN_GRND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Prozentsatz Sanktionierung Fahrlässig + ggf. Vorsatz (ganzzahlig)".
        /// </summary>
        [Column("VERST_SUM")]
        public int? VERST_SUM { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl beanstandeter Tiere, zum Zeitpunkt der VOK nicht mehr im Bestand".
        /// </summary>
        [Column("VOK_BEA_NB")]
        [Required]
        public int? VOK_BEA_NB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anzahl sonstige Fehler in HIT, nicht vom Halter verschuldet".
        /// </summary>
        [Column("VOK_HIT_SO")]
        public int? VOK_HIT_SO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarkenproblem, VVVO konform".
        /// </summary>
        /// <remarks>
        /// Anzahl Tiere mit einer, ohne oder unzulässigen Ohrmarke, davon VVVO konform
        /// </remarks>
        [Column("VOK_LOM1KX")]
        public int? VOK_LOM1KX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Für Sanktion maßgeblicher Bestand".
        /// </summary>
        [Column("VOK_MBE_SA")]
        [Required]
        public int? VOK_MBE_SA { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK-Rinder Diskrepanz Prüfbericht und Anlage 1".
        /// </summary>
        [Column("VRI_DIS_A1")]
        public int? VRI_DIS_A1 { get; set; }

        /// <summary>
        /// Gets or sets the value of "VOK Anlage 1 Spalte Zusatz".
        /// </summary>
        [Column("VOK_A1SZ")]
        [Required]
        public int? VOK_A1SZ { get; set; }

    }
}
