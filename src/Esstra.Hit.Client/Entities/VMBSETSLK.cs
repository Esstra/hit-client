// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// BSE-Test-Schlacht-Kopplung (Vertretermeldung)
    /// </summary>
    [Entity("VMBSETSLK")]
    public class VMBSETSLK
    {
        /// <summary>
        /// Gets the value of "Meldemitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_MBN")]
        public int? MELD_MBN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Schlachtdatum".
        /// </summary>
        [Column("SCHL_DAT")]
        [Required]
        public DateOnly? SCHL_DAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Schlachtnummer".
        /// </summary>
        /// <remarks>
        /// Schlachtnr. des Schlachtbetriebes
        /// </remarks>
        [Column("SCHL_NR")]
        [Required]
        public decimal? SCHL_NR { get; set; }

        /// <summary>
        /// Gets or sets the value of "PID-Betrieb, Proben-Identifikation Ausgabebetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Proben-ID-Bereich verwaltet (ursprünglich BSE, dann universell)
        /// </remarks>
        [Column("BSEPID_BNR")]
        [Required]
        public decimal? BSEPID_BNR { get; set; }

        /// <summary>
        /// Gets the value of "Meldebetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_BNR")]
        public decimal? MELD_BNR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Probennahmedatum".
        /// </summary>
        /// <remarks>
        /// Datum der Entnahme der Probe beim Tier
        /// </remarks>
        [Column("UNTS_NDAT")]
        [Required]
        public DateOnly? UNTS_NDAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke".
        /// </summary>
        /// <remarks>
        /// IDENTIFICATION NUMBER
        /// </remarks>
        [Column("LOM")]
        [Required]
        public decimal? LOM { get; set; }

        /// <summary>
        /// Gets or sets the value of "BSE-Probennahmegrund".
        /// </summary>
        /// <remarks>
        /// Grund der Probennahme für BSE-Untersuchung
        /// </remarks>
        [Column("UNTS_GRND")]
        [Required]
        public int? UNTS_GRND { get; set; }

        /// <summary>
        /// Gets or sets the value of "PID-Probe, Proben-Identifikation Sub-Part".
        /// </summary>
        /// <remarks>
        /// spezifische eindeutige ID innerhalb des Systems einer Ausgabestelle (urspr. BSE, dann universell)
        /// </remarks>
        [Column("BSEPID_SUB")]
        [Required]
        public string? BSEPID_SUB { get; set; }

        /// <summary>
        /// Gets the value of "gespeichert".
        /// </summary>
        /// <remarks>
        /// Speichern-Zeitpunkt, ab wann die Information technisch gültig ist
        /// </remarks>
        [Column("SYS_VON")]
        public DateTime? SYS_VON { get; set; }

        /// <summary>
        /// Gets or sets the value of "BSE-Untersuchung ZN-Störung festgestellt".
        /// </summary>
        /// <remarks>
        /// Lag beim Tier eine ZN-Störung vor
        /// </remarks>
        [Column("UNTS_STOER")]
        [Required]
        public int? UNTS_STOER { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnr Schlachtbetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnr Schlachtbetrieb oder letzter Betrieb
        /// </remarks>
        [Column("BNR15_FROM")]
        [Required]
        public decimal? BNR15_FROM { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verantwortlicher für die Datensendung Schlacht-Test-Kopplung".
        /// </summary>
        /// <remarks>
        /// i.d.R. zuständiger amtlicher Tierarzt
        /// </remarks>
        [Column("BNR15_TSLK")]
        [Required]
        public decimal? BNR15_TSLK { get; set; }

        /// <summary>
        /// Gets the value of "Satzstatus".
        /// </summary>
        /// <remarks>
        /// Systemstatus des Satzes
        /// </remarks>
        [Column("SYS_STAT")]
        public int? SYS_STAT { get; set; }

        /// <summary>
        /// Gets the value of "storniert".
        /// </summary>
        /// <remarks>
        /// Storno-Zeitpunkt, ab wann die Information technisch nicht meht gültig ist
        /// </remarks>
        [Column("SYS_BIS")]
        public DateTime? SYS_BIS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bemerkung".
        /// </summary>
        [Column("BEMERKUNG")]
        public string? BEMERKUNG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Laufende Nummer innerhalb der Charge".
        /// </summary>
        /// <remarks>
        /// Laufende Nummer der Schlachtungen in der Charge
        /// </remarks>
        [Column("CHARGE_LFN")]
        public int? CHARGE_LFN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Chargen-Nummer der Schlachtung".
        /// </summary>
        /// <remarks>
        /// Kennzeichnung der Schlacht-Charge
        /// </remarks>
        [Column("CHARGE_NR")]
        public string? CHARGE_NR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Chargen-Umfang".
        /// </summary>
        /// <remarks>
        /// Anzahl Schlachtungen in der Charge
        /// </remarks>
        [Column("CHARGE_UMF")]
        public int? CHARGE_UMF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tieraltersklasse im TSE-Test".
        /// </summary>
        [Column("TSE_AK")]
        public int? TSE_AK { get; set; }

        /// <summary>
        /// Gets or sets the value of "Alter in Monaten des Tieres im TSE-Test".
        /// </summary>
        [Column("TSE_ALTER")]
        public int? TSE_ALTER { get; set; }

        /// <summary>
        /// Gets or sets the value of "Geschlecht des Tieres im TSE-Test".
        /// </summary>
        [Column("TSE_GESCHL")]
        public int? TSE_GESCHL { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnummer des letzter Halter des Tieres im TSE-Test".
        /// </summary>
        [Column("TSE_HALTER")]
        public decimal? TSE_HALTER { get; set; }

        /// <summary>
        /// Gets or sets the value of "Name und Anschrift des letzten Halters des Tieres im TSE-Test".
        /// </summary>
        [Column("TSE_HA_ADR")]
        public string? TSE_HA_ADR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Sonstiges Tier-Identitätskennzeichen im TSE-Test".
        /// </summary>
        /// <remarks>
        /// Ohrmarke oder eindeutige Kennzeichnung für Hirschartige, für Nichtrinder Stallnummer, TBA-Nummer..
        /// </remarks>
        [Column("TSE_IDENT")]
        public string? TSE_IDENT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke für kleine Wiederkäuer nach VVVO im TSE-Test".
        /// </summary>
        /// <remarks>
        /// Individualkennzeichnung oder Bestandsmarke, je nach Tierart und Alter
        /// </remarks>
        [Column("TSE_LOM_IB")]
        public string? TSE_LOM_IB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tierart im TSE-Test".
        /// </summary>
        [Column("TSE_T_ART")]
        public int? TSE_T_ART { get; set; }

    }
}
