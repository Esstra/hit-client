// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// EPI-Auftrag epidemiologische Ermittlungen
    /// </summary>
    [Entity("EPI_AUFTRA")]
    public class EPI_AUFTRA
    {
        /// <summary>
        /// Gets or sets the value of "TSN Seuchenobjekt-Nummer".
        /// </summary>
        /// <remarks>
        /// TSN Seuchenobjekt-Nummer
        /// </remarks>
        [Column("TSN_SO_NR")]
        [Required]
        public string? TSN_SO_NR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Laufende Nummer des Auftrags für das Seuchenobjekt".
        /// </summary>
        [Column("EPI_AUF_NR")]
        [Required]
        public int? EPI_AUF_NR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnummer".
        /// </summary>
        /// <remarks>
        /// Registriernummer für Betrieb, Langform mit B.Land und Staat
        /// </remarks>
        [Column("BNR15")]
        [Required]
        public decimal? BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ermittlungsdatum von backward".
        /// </summary>
        /// <remarks>
        /// Beginndatum des Zeitraum für Rückwärts-Ermittlung der Gewichtung und Kontaktbetriebe
        /// </remarks>
        [Column("EPI_B_VON")]
        public DateOnly? EPI_B_VON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ermittlungsdatum bis backward".
        /// </summary>
        /// <remarks>
        /// Endedatum des Zeitraum für Rückwärts-Ermittlung der Gewichtung und Kontaktbetriebe
        /// </remarks>
        [Column("EPI_B_BIS")]
        public DateOnly? EPI_B_BIS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ermittlungsdatum von forward".
        /// </summary>
        /// <remarks>
        /// Beginndatum des Zeitraum für Vorwärts-Ermittlung der Gewichtung und Kontaktbetriebe
        /// </remarks>
        [Column("EPI_F_VON")]
        public DateOnly? EPI_F_VON { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ermittlungsdatum bis forward".
        /// </summary>
        /// <remarks>
        /// Endedatum des Zeitraum für Vorwärts-Ermittlung der Gewichtung und Kontaktbetriebe
        /// </remarks>
        [Column("EPI_F_BIS")]
        public DateOnly? EPI_F_BIS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Berechnung für Tierart Rind (J/N)".
        /// </summary>
        /// <remarks>
        /// soll für für diese Tierart das Netz berechnet werden
        /// </remarks>
        [Column("TIERART_RI")]
        public bool? TIERART_RI { get; set; }

        /// <summary>
        /// Gets or sets the value of "Berechnung für Tierart Schwein (J/N)".
        /// </summary>
        [Column("TIERART_SW")]
        public bool? TIERART_SW { get; set; }

        /// <summary>
        /// Gets or sets the value of "Berechnung für Tierart Schaf/Ziege (J/N)".
        /// </summary>
        [Column("TIERART_SZ")]
        public bool? TIERART_SZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "Maximaler Betrachtungszeitraum".
        /// </summary>
        [Column("EPI_MAX")]
        public int? EPI_MAX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tageshorizont für Halter".
        /// </summary>
        [Column("ANZ_T_HALT")]
        public int? ANZ_T_HALT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tageshorizont für Händler".
        /// </summary>
        [Column("ANZ_T_HAND")]
        public int? ANZ_T_HAND { get; set; }

        /// <summary>
        /// Gets or sets the value of "E-Mail-Adressen".
        /// </summary>
        /// <remarks>
        /// mehrere E-Mail Adressen möglich, getrennt mit Komma
        /// </remarks>
        [Column("EPI_EMAILS")]
        public string? EPI_EMAILS { get; set; }

        /// <summary>
        /// Gets the value of "Meldebetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_BNR")]
        public decimal? MELD_BNR { get; set; }

        /// <summary>
        /// Gets the value of "Meldemitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung abgesetzt hat
        /// </remarks>
        [Column("MELD_MBN")]
        public int? MELD_MBN { get; set; }

        /// <summary>
        /// Gets the value of "Stornobetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_BNR")]
        public decimal? STRN_BNR { get; set; }

        /// <summary>
        /// Gets the value of "Stornomitbenutzer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer die Meldung storniert hat
        /// </remarks>
        [Column("STRN_MBN")]
        public int? STRN_MBN { get; set; }

        /// <summary>
        /// Gets the value of "gespeichert".
        /// </summary>
        /// <remarks>
        /// Speichern-Zeitpunkt, ab wann die Information technisch gültig ist
        /// </remarks>
        [Column("SYS_VON")]
        public DateTime? SYS_VON { get; set; }

        /// <summary>
        /// Gets the value of "storniert".
        /// </summary>
        /// <remarks>
        /// Storno-Zeitpunkt, ab wann die Information technisch nicht meht gültig ist
        /// </remarks>
        [Column("SYS_BIS")]
        public DateTime? SYS_BIS { get; set; }

        /// <summary>
        /// Gets the value of "Satzstatus".
        /// </summary>
        /// <remarks>
        /// Systemstatus des Satzes
        /// </remarks>
        [Column("SYS_STAT")]
        public int? SYS_STAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Key zur Verschlüsselung".
        /// </summary>
        [Column("EPI_KEY")]
        [Required]
        public string? EPI_KEY { get; set; }

        /// <summary>
        /// Gets or sets the value of "Maximale Ebene bei der Berechnung".
        /// </summary>
        [Column("EPI_MAX_EB")]
        [Required]
        public int? EPI_MAX_EB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Sollen indirekte Kontakte bei Rindern berücksichtigt werden".
        /// </summary>
        [Column("EPI_R_INDI")]
        [Required]
        public bool? EPI_R_INDI { get; set; }

        /// <summary>
        /// Gets or sets the value of "Status des Betriebs".
        /// </summary>
        /// <remarks>
        /// Status des Betriebs (Ausbruchsbetrieb, Kontaktbetrieb,...)
        /// </remarks>
        [Column("EPI_STATUS")]
        [Required]
        public int? EPI_STATUS { get; set; }

        /// <summary>
        /// Gets or sets the value of "Beziehungen - Epidemiologische Einheit (EE) auf BTR_Z berücksichtigen".
        /// </summary>
        /// <remarks>
        /// also Kontakte aller verrechnet
        /// </remarks>
        [Column("EPI_BEZ_EE")]
        [Required]
        public int? EPI_BEZ_EE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Beziehungen - Unternehmens/Betriebsstätte (UB) auf BTR_Z berücksichtigen".
        /// </summary>
        /// <remarks>
        /// also Kontakte aller verrechnet
        /// </remarks>
        [Column("EPI_BEZ_UB")]
        [Required]
        public int? EPI_BEZ_UB { get; set; }

        /// <summary>
        /// Gets or sets the value of "EPI-Marker".
        /// </summary>
        [Column("EPI_MARKER")]
        [Required]
        public int? EPI_MARKER { get; set; }

        /// <summary>
        /// Gets or sets the value of "EPI-Quelle".
        /// </summary>
        [Column("EPI_QUELLE")]
        [Required]
        public int? EPI_QUELLE { get; set; }

        /// <summary>
        /// Gets or sets the value of "soll sofort gerechnet werden (i.d.R. am letzten Satz eines Auftrags)".
        /// </summary>
        [Column("EPI_RECHNE")]
        [Required]
        public bool? EPI_RECHNE { get; set; }

    }
}
