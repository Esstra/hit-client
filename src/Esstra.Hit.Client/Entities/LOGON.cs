// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// Anmeldung und Identifikation
    /// </summary>
    [Entity("LOGON")]
    public class LOGON
    {
        /// <summary>
        /// Gets or sets the value of "Mitbenutzernummer".
        /// </summary>
        /// <remarks>
        /// Mitbenutzernummer innerhalb einer Betriebsnummer
        /// </remarks>
        [Column("MBN")]
        public int? MBN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Mitbenutzer-Id".
        /// </summary>
        /// <remarks>
        /// Mitbenutzer-Id als alternative zur Nummer bei Anmeldung
        /// </remarks>
        [Column("MBN_ID")]
        public string? MBN_ID { get; set; }

        /// <summary>
        /// Gets or sets the value of "Meldeweg".
        /// </summary>
        /// <remarks>
        /// Meldeweg (Post,IVR,IN...)
        /// </remarks>
        [Column("MELD_WG")]
        [Required]
        public int? MELD_WG { get; set; }

        /// <summary>
        /// Gets or sets the value of "Client-Zufall".
        /// </summary>
        /// <remarks>
        /// Bestandteil bei verschlüsseltem Verbindungsaufbau (salt)
        /// </remarks>
        [Column("RAND_CLI")]
        public string? RAND_CLI { get; set; }

        /// <summary>
        /// Gets or sets the value of "Session-Key für symmetrische Verschlüsselung".
        /// </summary>
        /// <remarks>
        /// Bestandteil bei verschlüsseltem Verbindungsaufbau, vom Client generiert
        /// </remarks>
        [Column("SESS_KEY")]
        public string? SESS_KEY { get; set; }

        /// <summary>
        /// Gets or sets the value of "PIN (Passwort)".
        /// </summary>
        /// <remarks>
        /// Personen-Identifikationsnummer d.h. persönliches Passwort (in alten Betriebsdaten nur 6 Stellen)
        /// </remarks>
        [Column("PIN")]
        [Required]
        public string? PIN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Geschwätzig".
        /// </summary>
        /// <remarks>
        /// Ausgabe von mehr Information im HITP
        /// </remarks>
        [Column("VERBOSE")]
        public int? VERBOSE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Server-Begrüßungstext".
        /// </summary>
        /// <remarks>
        /// wird bei verschlüsseltem Verbindungsaufbau als Challenge-Response zurück geschickt
        /// </remarks>
        [Column("SVR_HELO")]
        public string? SVR_HELO { get; set; }

        /// <summary>
        /// Gets or sets the value of "Timeout".
        /// </summary>
        /// <remarks>
        /// Nach wievielen Sekunden Inaktivität Verbindung unterbrochen wird
        /// </remarks>
        [Column("TIMEOUT")]
        public int? TIMEOUT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bundesland".
        /// </summary>
        /// <remarks>
        /// Bundesland-Schlüssel
        /// </remarks>
        [Column("BLAND")]
        public int? BLAND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnummer".
        /// </summary>
        /// <remarks>
        /// Registriernummer für Betrieb, Langform mit B.Land und Staat
        /// </remarks>
        [Column("BNR15")]
        [Required]
        public decimal? BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "MandantenBetrieb".
        /// </summary>
        /// <remarks>
        /// Betriebsnummer für die ein HIT-Gesamt-Bevollmächtigter im System arbeiten will
        /// </remarks>
        [Column("BNR15_MAN")]
        public decimal? BNR15_MAN { get; set; }

        /// <summary>
        /// Gets or sets the value of "ISO-Staat".
        /// </summary>
        /// <remarks>
        /// ISO-Länderschlüssel
        /// </remarks>
        [Column("ILAND")]
        public int? ILAND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Max Consecutive Errors".
        /// </summary>
        /// <remarks>
        /// Nach wievielen unmittelbar aufeinanderfolgenden Fehlern der Server abbrechen soll
        /// </remarks>
        [Column("MAXCERR")]
        public int? MAXCERR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Version Client".
        /// </summary>
        /// <remarks>
        /// Version des HITP-Clients
        /// </remarks>
        [Column("VERSIONC")]
        public int? VERSIONC { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verhalten bei Senden von unnötigtem ADIS-Item oder unbekantem Feld".
        /// </summary>
        /// <remarks>
        /// Sollen überflüssige Felder kommentarlos ignoriert werden (Plausi 119, 1327,1328)
        /// </remarks>
        [Column("VHWRONGFLD")]
        public int? VHWRONGFLD { get; set; }

        /// <summary>
        /// Gets or sets the value of "Anmeldekanal der Partneranwendung".
        /// </summary>
        /// <remarks>
        /// Ermöglicht den Partneranwendungen das Problem des Verbot der Doppelanmeldung zu umgehen
        /// </remarks>
        [Column("CHA")]
        public int? CHA { get; set; }

        /// <summary>
        /// Gets or sets the value of "Retrieve Verbose Default".
        /// </summary>
        /// <remarks>
        /// legt die Voreinstellung für den Subcode /V - Verbose im Retrieve-Commad fest
        /// </remarks>
        [Column("RS_V_DEF")]
        public int? RS_V_DEF { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verhalten bei MixedLine-Funktionen".
        /// </summary>
        /// <remarks>
        /// Entityname ohne/mit Funktionsnamen, Reihenfolge/Gruppierung der Entities
        /// </remarks>
        [Column("VHMXLINE_F")]
        public int? VHMXLINE_F { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verhalten bei BLOB-Feldern".
        /// </summary>
        /// <remarks>
        /// wird binärer Transfer von large Objects unterstützt, ggf. mit Kompression
        /// </remarks>
        [Column("VH_BLOB")]
        public int? VH_BLOB { get; set; }

        /// <summary>
        /// Gets or sets the value of "Identifikation des Klienten für die PUK".
        /// </summary>
        [Column("PUK_CLIENT")]
        public int? PUK_CLIENT { get; set; }

        /// <summary>
        /// Gets or sets the value of "PUK (Einmal-Passwort), vom Client verschlüsselt".
        /// </summary>
        [Column("PUK_ENCRYP")]
        public string? PUK_ENCRYP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verhalten bei Füllen eines Feldes durch Server".
        /// </summary>
        /// <remarks>
        /// Soll Hinweis mit Wert ausgegeben werden
        /// </remarks>
        [Column("VHFILLFLD")]
        public int? VHFILLFLD { get; set; }

        /// <summary>
        /// Gets or sets the value of "Teststring im Logon um Codeset und Sonderzeichenübertragung zu verifizieren".
        /// </summary>
        [Column("CODEPROBE")]
        public string? CODEPROBE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Auswahl Blockmodus beim symmetrischen Verschlüsseln".
        /// </summary>
        [Column("ENC_SYM")]
        public int? ENC_SYM { get; set; }

        /// <summary>
        /// Gets or sets the value of "UNICODE als UTF8 auf dem Socket".
        /// </summary>
        /// <remarks>
        /// experimentell
        /// </remarks>
        [Column("UTF8")]
        public int? UTF8 { get; set; }

        /// <summary>
        /// Gets or sets the value of "OIDC-Client-Id".
        /// </summary>
        /// <remarks>
        /// (case sensitive, Kunde und HIT/ZID vereinbaren, Buchstaben + Ziffern)
        /// </remarks>
        [Column("OI_C_ID")]
        public string? OI_C_ID { get; set; }

        /// <summary>
        /// Gets or sets the value of "OIDC-Token".
        /// </summary>
        [Column("OI_TOKEN")]
        public string? OI_TOKEN { get; set; }

        /// <summary>
        /// Gets or sets the value of "Verhalten bei Anhängen der Kompetenzbedingung".
        /// </summary>
        [Column("KOMPEV2")]
        public int? KOMPEV2 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Default-Maximum für Rows im RS-Befehl wenn nichts explizid angegeben (RS/Rx)".
        /// </summary>
        [Column("DEF_ROWS")]
        public Int64? DEF_ROWS { get; set; }

    }
}
