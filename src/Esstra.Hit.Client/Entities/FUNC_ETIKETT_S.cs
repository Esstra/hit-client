// 
// This file has been auto-generated by Esstra.Hit.Client.CodeGen.
// 
namespace Esstra.Hit.Client.Entities
{
    using Esstra.Hit.Client.Annotations;

    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    /// <summary>
    /// Etikettierdaten nur Schlachtung, inkl. Tod
    /// </summary>
    [Entity("FUNC_ETIKETT_S")]
    public class FUNC_ETIKETT_S
    {
        /// <summary>
        /// Gets or sets the value of "Betriebsnummer".
        /// </summary>
        /// <remarks>
        /// Registriernummer für Betrieb, Langform mit B.Land und Staat
        /// </remarks>
        [Column("BNR15")]
        public decimal? BNR15 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bundesland".
        /// </summary>
        /// <remarks>
        /// Bundesland-Schlüssel
        /// </remarks>
        [Column("BLAND")]
        public int? BLAND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Bundesland (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// Bundeslandschlüssel (als Alpha-Code in Funktionen)
        /// </remarks>
        [Column("BLANDX")]
        public string? BLANDX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Betriebsnummer (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// Betriebsschlüssel für Ausgabe i.d.F. ll rkk gggg nnnn
        /// </remarks>
        [Column("BNR15_X")]
        public string? BNR15_X { get; set; }

        /// <summary>
        /// Gets or sets the value of "PLZ".
        /// </summary>
        /// <remarks>
        /// Postleitzahl, ggf. internat. ohne Staat
        /// </remarks>
        [Column("PLZ")]
        public string? PLZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "PlausiNr".
        /// </summary>
        /// <remarks>
        /// (seit 06.2004 5 statt 4stellig)
        /// </remarks>
        [Column("PLAUSINR")]
        public int? PLAUSINR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ortsteil".
        /// </summary>
        /// <remarks>
        /// Ortsteil wenn erforderlich
        /// </remarks>
        [Column("ORTSTEIL")]
        public string? ORTSTEIL { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ort".
        /// </summary>
        /// <remarks>
        /// Ort
        /// </remarks>
        [Column("ORT")]
        public string? ORT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Name 2.Zeile".
        /// </summary>
        /// <remarks>
        /// 2.Namenszeile für Adressfenster
        /// </remarks>
        [Column("NAME2")]
        public string? NAME2 { get; set; }

        /// <summary>
        /// Gets or sets the value of "Name in Kurzform".
        /// </summary>
        /// <remarks>
        /// Name in Kurzform für Adressfenster
        /// </remarks>
        [Column("NAME")]
        public string? NAME { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke Tier (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// nur in Funktionen, wenn der Benutzer keine Möglichkeit hat ALPHALOM selber aufzurufen)
        /// </remarks>
        [Column("LOM_X")]
        public string? LOM_X { get; set; }

        /// <summary>
        /// Gets or sets the value of "Ohrmarke".
        /// </summary>
        /// <remarks>
        /// IDENTIFICATION NUMBER
        /// </remarks>
        [Column("LOM")]
        public decimal? LOM { get; set; }

        /// <summary>
        /// Gets or sets the value of "ISO-Staat (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// ISO-Länderschlüssel (als Alpha-Code in Funktionen)
        /// </remarks>
        [Column("ILANDX")]
        public string? ILANDX { get; set; }

        /// <summary>
        /// Gets or sets the value of "ISO-Staat".
        /// </summary>
        /// <remarks>
        /// ISO-Länderschlüssel
        /// </remarks>
        [Column("ILAND")]
        public int? ILAND { get; set; }

        /// <summary>
        /// Gets or sets the value of "Haltungstyp (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// Haltungstyp für Vorhaltungen und Etikettierung (als Alpha-Code)
        /// </remarks>
        [Column("HALT_TYPX")]
        public string? HALT_TYPX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Haltungstyp".
        /// </summary>
        /// <remarks>
        /// Haltungstyp für Vorhaltungen und Etikettierung
        /// </remarks>
        [Column("HALT_TYP")]
        public int? HALT_TYP { get; set; }

        /// <summary>
        /// Gets or sets the value of "Fehlertext".
        /// </summary>
        [Column("FEHLERTEXT")]
        public string? FEHLERTEXT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tierendedatum".
        /// </summary>
        /// <remarks>
        /// Datum der Schlachtung, Verendung oder Ausfuhr
        /// </remarks>
        [Column("DAT_END")]
        public DateOnly? DAT_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Kategorie (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// Kategorie  i.d.F XX
        /// </remarks>
        [Column("SCHL_KATX")]
        public string? SCHL_KATX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Kategorie".
        /// </summary>
        /// <remarks>
        /// Kategorie des Schlachtkörpers
        /// </remarks>
        [Column("SCHL_KAT")]
        public int? SCHL_KAT { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tier-Ende (aufbereitet)".
        /// </summary>
        /// <remarks>
        /// Tier-Ende i.d.F XX
        /// </remarks>
        [Column("TIER_ENDX")]
        public string? TIER_ENDX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Tier-Ende".
        /// </summary>
        /// <remarks>
        /// Tier-Ende Tod (differenziert!), Schlachtung ...
        /// </remarks>
        [Column("TIER_END")]
        public int? TIER_END { get; set; }

        /// <summary>
        /// Gets or sets the value of "Schwere".
        /// </summary>
        [Column("SCHWERE")]
        public int? SCHWERE { get; set; }

        /// <summary>
        /// Gets or sets the value of "Strasse Nr".
        /// </summary>
        /// <remarks>
        /// Straße und Hausnummer
        /// </remarks>
        [Column("STR_NR")]
        public string? STR_NR { get; set; }

        /// <summary>
        /// Gets or sets the value of "Regierungsbezirk (inoffiziell)".
        /// </summary>
        /// <remarks>
        /// für regionale Auswertungen, Form  LLK00 z.B.  12100, 9100
        /// </remarks>
        [Column("REGBEZ")]
        public int? REGBEZ { get; set; }

        /// <summary>
        /// Gets or sets the value of "Regierungsbezirk (inoffiziell, aufbereitet)".
        /// </summary>
        /// <remarks>
        /// Kurzschreibweise aus CODE - REGBEZ
        /// </remarks>
        [Column("REGBEZX")]
        public string? REGBEZX { get; set; }

        /// <summary>
        /// Gets or sets the value of "Haltung im gewünschten Gebiet".
        /// </summary>
        /// <remarks>
        /// Bei Funktionen zur Etikettierung kann geprüft werden ob Haltung in gegebenem Gebiet liegt
        /// </remarks>
        [Column("ETI_GEBIET")]
        public int? ETI_GEBIET { get; set; }

    }
}
